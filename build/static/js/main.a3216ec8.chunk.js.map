{"version":3,"sources":["redux/dataReduser.js","redux/reduxStore.js","redux/utils.js","Components/FactoringReqForm.jsx","App.js","serviceWorker.js","index.js","css/main.module.css","img/loader.svg"],"names":["initialState","buyerForms","step","setStep","type","dataReduser","state","action","formArray","rootReduser","combineReducers","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","validation","required","value","undefined","email","test","phone","max","toString","length","maxValue","parseInt","replace","minValue","min","rank","renderField","input","label","meta","touched","error","warning","className","style","inputError","inputStyle","placeholder","warningText","phoneMask","createTextMask","pattern","FormBuyer","props","line","id","Field","component","name","validate","sum","normalize","FormComponent","reduxForm","approved","textAlign","fontSize","paddingBottom","inputCabinet","cursor","formButton","animation","onSubmit","handleSubmit","map","key","onClick","newBuyer","addBuyerForm","addButton","agree","src","loader","alt","connect","dispatch","setBuyerForm","getStep","setTimeout","data","console","log","MainRequestComponent","main","headerText","paddingLeft","paddingRight","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.a3216ec8.chunk.js","sourcesContent":["let ADD_BUYER = 'ADD_BUYER'\nlet IS_STEP = 'IS_STEP'\n\nlet initialState = {\n    buyerForms: [],\n    step: '1'\n}\n\nconst dataReduser = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_BUYER: {\n            return { ...state, buyerForms: [...state.buyerForms, action.formArray] }\n        }\n\n        case IS_STEP: {\n            return { ...state, step: action.step }\n        }\n\n        default:\n            return state\n    }\n}\n\nconst setBuyerForm = (formArray) => ({ type: ADD_BUYER, formArray })\nconst setStep = (step) => ({ type: IS_STEP, step })\n\nexport const addBuyerForm = (formArray) => (dispatch) => {  \n    dispatch(setBuyerForm(formArray))\n}\n\nexport const getStep = (step) => (dispatch) => {\n    dispatch(setStep(step))\n     setTimeout(() => {\n        dispatch(setStep('3'))\n      }, 2000);\n}\n\nexport default dataReduser","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport dataReduser from './dataReduser'\n\nlet rootReduser = combineReducers({\n    dataReduser,\n    form: formReducer,\n})\n\nlet store = createStore(rootReduser, applyMiddleware(thunkMiddleware))\n\nexport default store","export const validation = {\n\n    required: (value) => value ? undefined : 'Обязательное для заполнения поле',\n    email: (value) => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Некорректный адрес электронной почты' : undefined,\n    // phone: (value) => value && !/^\\+7\\s?[(]{0,1}9[0-9]{2}[)]{0,1}\\s?\\d{3}[-]{0,1}\\d{2}[-]{0,1}\\d{2}$/i.test(value) ? 'Укажите номер телефона в формате +7(ХХХ)XXX-XX-XX' : undefined,\n    phone: (max) => value => value.toString().length && value.toString().length < max ? 'Некорректный номер телефона' : undefined,\n    maxValue: (max) => value => parseInt(value.replace(/\\s/g, '')) && parseInt(value.replace(/\\s/g, '')) > max ? `Сумма должна быть не больше ${max.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} руб.` : undefined,\n    minValue: (min) => value => parseInt(value.replace(/\\s/g, '')) && parseInt(value.replace(/\\s/g, '')) < min ? `Сумма должна быть не меньше ${min.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} руб.` : undefined,\n    rank: (value) => value && value.replace(/[^\\d]/g, '').replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, ' ')\n\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { reduxForm, Field } from 'redux-form'\nimport { createTextMask } from 'redux-form-input-masks';\nimport style from '../css/main.module.css'\nimport { addBuyerForm, getStep } from '../redux/dataReduser'\nimport loader from '../img/loader.svg'\nimport { validation } from '../redux/utils'\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n      <div>\n        <input className={touched && (error || warning) ? style.inputError : style.inputStyle} {...input} placeholder={label} type={type} />\n        {touched && ((error && <div className={style.warningText}>{error}</div>) || (warning && <div>{warning}</div>))}\n      </div>\n    </div>\n  )\n\nconst phoneMask = createTextMask({\n    pattern: '+7(999)999-99-99',\n  })\n\nconst Form = (props) => {\n\n    const addBuyer = () => {\n        const newBuyer = {\n            id: props.buyerForms[0] !== undefined ? parseInt(props.buyerForms[props.buyerForms.length - 1].id) + 1 : '1', \n            name: props.buyerForms[0] !== undefined ? 'fioBuyer' + (parseInt(props.buyerForms[props.buyerForms.length - 1].id) + 1) : 'nameBuyer', \n            sum: props.buyerForms[0] !== undefined ? 'sumBuyer'+ (parseInt(props.buyerForms[props.buyerForms.length - 1].id) + 1) : 'sumBuyer'\n        }\n        props.addBuyerForm(newBuyer)\n    }\n    \n    return (\n        <>\n        {\n            props.step === '3' ? <>\n            <div className={style.approved}>Вам предварительно одобрено предложение по факторингу.<br/> В ближайшее время с вами свяжется наш менеджер.<br/></div>\n            <div style={{ textAlign: 'center', fontSize: 13, paddingBottom: 15 }}>Уже сейчас, в личном кабинете, вы можете предоставить<br/>  необходимый пакет документов.</div>\n            <form>\n                <div style={{textAlign: 'center'}}>\n                    <li><Field className={style.inputCabinet} placeholder='Логин' component={'input'} type={'text'} name={'login'} /></li>\n                    <li><Field className={style.inputCabinet} placeholder='Пароль' component={'input'} type={'password'} name={'pass'} /></li>\n                    <div style={{ fontSize: 12, cursor: 'pointer' }}><u>Забыли пароль?</u></div>\n                </div><br/>\n                <button className={ `${style.formButton} ${style.animation}`} type='submit'>Войти в личный кабинет</button> \n            </form></> \n            :\n            <form onSubmit={ props.handleSubmit }>\n                <li><Field component={renderField} label={'Ф.И.О.'} type={'text'} name={'fio'} validate={validation.required} /></li>\n                <li><Field component={renderField} label={'Название компании / ИНН'} type={'text'} name={'innComp'} validate={validation.required} /></li>\n                <li><Field component={renderField} label={'Название компании / ИНН вашего покупателя'} type={'text'} name={'innBuyer'} validate={validation.required} /></li>\n                <li><Field component={renderField} label={'+7(___)___-__-__'} type={'tel'} name={'phone'} validate={[validation.required, validation.phone(10)]} {...phoneMask} /></li>\n                <li><Field component={renderField} label={'Адрес электронной почты'} type={'email'} name={'email'} validate={[validation.required, validation.email]} /></li>\n                <li><Field component={renderField} label={'Сумма финансирования, руб.'} type={'text'} name={'sum'} validate={[validation.required, validation.maxValue(50000000), validation.minValue(300000)]} normalize={validation.rank} /></li>\n                \n                {\n                    props.buyerForms.map(form => <FormBuyer key={form.id} id={form.id} name={form.name} sum={form.sum}/>)\n                }\n\n                <button onClick={ addBuyer } className={`${style.addButton} ${style.animation}`} type='button'>Добавить покупателя</button>\n\n                {\n                    props.step === '1' ? <>\n                    <li className={style.agree}>Даю согласие на обработку моих персональных данных и подтверждаю факт<br/> ознакомления с Политикой в отношении обработки персональных данных.</li>\n                    <div style={{textAlign: 'center'}}><button className={ `${style.formButton} ${style.animation}` } type='submit'>Отправить заявку</button></div></> : \n                    props.step === '2' ? <div style={{textAlign: 'center'}}><img src={loader} alt={''} /></div> : null\n                }\n            </form> \n        }\n        </>\n    )\n}\n\nconst FormBuyer = (props) => {\n    return(\n        <>\n        <div className={style.line}><span>Покупатель {parseInt(props.id)+1}</span></div>\n        <li><Field component={renderField} label={'Название компании / ИНН вашего покупателя'} type={'text'} name={props.name} validate={validation.required} /></li>\n        <li><Field component={renderField} label={'Сумма финансирования, руб.'} type={'text'} name={props.sum} validate={[validation.required, validation.maxValue(50000000), validation.minValue(300000)]} normalize={validation.rank} /></li>\n        </>\n    )\n}\n\nconst FormComponent = reduxForm({form: 'formData'})(Form)\n\nconst FactoringReqForm = (props) => {\n\n    const onSubmit = (data) => {\n        console.log(data)\n        props.getStep('2')\n    }\n\n    return (\n        <>\n        <FormComponent \n        onSubmit={ onSubmit } buyerForms={ props.buyerForms } \n        addBuyerForm={ props.addBuyerForm } step={ props.step } />\n        </>\n    )\n} \n\nlet mapStateToProps = (state) => {\n    return {\n        buyerForms: state.dataReduser.buyerForms,\n        step: state.dataReduser.step,\n    }\n}\n\nexport default connect(mapStateToProps, { addBuyerForm, getStep })(FactoringReqForm)","import React from 'react';\nimport './App.css';\nimport style from './css/main.module.css'\nimport FactoringReqForm from './Components/FactoringReqForm'\n\nconst MainRequestComponent = () => {\n  return (\n    <div className={style.main}>\n      <div className={style.headerText}><b>ЗАЯВКА НА ФАКТОРИНГ</b></div>\n      <div style={ {paddingLeft: 15, paddingRight: 15, paddingBottom: 15, paddingTop: 15} }>\n          <FactoringReqForm/>\n      </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainRequestComponent />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/reduxStore'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <Provider store={ store }>\n      <App />\n    </Provider>\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__20EEA\",\"animation\":\"main_animation__1HRav\",\"addButton\":\"main_addButton__1liB4\",\"formButton\":\"main_formButton__pBF0p\",\"inputStyle\":\"main_inputStyle__36wJg\",\"inputCabinet\":\"main_inputCabinet__LgXj8\",\"inputError\":\"main_inputError__20Qum\",\"agree\":\"main_agree__tlsoF\",\"approved\":\"main_approved__21Cvd\",\"headerText\":\"main_headerText__3fjqd\",\"line\":\"main_line__2IfL1\",\"warningText\":\"main_warningText__13wPu\"};","module.exports = __webpack_public_path__ + \"static/media/loader.d867dc60.svg\";"],"sourceRoot":""}